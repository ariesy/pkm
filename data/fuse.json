{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"My Personal Knowledge Management Vault","n":0.447},"1":{"v":"# Welcome to Dendron\n\nThis is my personal knowledge management vault.\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Home Page](https://pkm.zhu-kun.com/)\n- [Github](https://github.com/ariesy/pkm)","n":0.218}}},{"i":2,"$":{"0":{"v":"Utility","n":1}}},{"i":3,"$":{"0":{"v":"Photoprism","n":1}}},{"i":4,"$":{"0":{"v":"Auto Index New Files","n":0.5},"1":{"v":"Create a cron job:\n```bash\nsudo crontab -e\n```\n\nAdd following command:\n\n```bash\ndocker exec -ti [container-name] photoprism index\n```\n","n":0.277}}},{"i":5,"$":{"0":{"v":"Sync Folder Outside Onedrive Root","n":0.447},"1":{"v":"How to sync a folder that is out side of onedrive root folder? Just use the following command to link the source folder with a target folder inside onedrive root folder.\n\n```cmd\nmklink /j \"E:\\root\\OneDrive - root\\target\" \"D:\\source\"\n```\n\n[mklink4onedrive.bat](/assets/scripts/mklink4onedrive.bat)\n","n":0.167}}},{"i":6,"$":{"0":{"v":"Tags","n":1}}},{"i":7,"$":{"0":{"v":"Ubuntu","n":1}}},{"i":8,"$":{"0":{"v":"Shell","n":1}}},{"i":9,"$":{"0":{"v":"Powershell","n":1}}},{"i":10,"$":{"0":{"v":"Linux","n":1}}},{"i":11,"$":{"0":{"v":"Linux Deploy","n":0.707}}},{"i":12,"$":{"0":{"v":"init.d","n":1}}},{"i":13,"$":{"0":{"v":"Android","n":1}}},{"i":14,"$":{"0":{"v":"WSL","n":1}}},{"i":15,"$":{"0":{"v":"Software Engineer","n":0.707}}},{"i":16,"$":{"0":{"v":"Python","n":1}}},{"i":17,"$":{"0":{"v":"Pyspark","n":1}}},{"i":18,"$":{"0":{"v":"Java Object Not Callable","n":0.5},"1":{"v":"Add env variables:\n```bash\nexport SPARK_HOME=/usr/local/spark\nexport PATH=$SPARK_HOME/bin:$PATH\nexport PYSPARK_SUBMIT_ARGS=\"--master local[*]\"\nexport PYTHONPATH=$SPARK_HOME/python/:$PYTHONPATH\nexport PYTHONPATH=$SPARK_HOME/python/lib/*.zip:$PYTHONPATH\n```\n\nReference:\nhttps://stackoverflow.com/questions/65713299/javapackage-object-is-not-callable-error-executing-explain-in-pyspark-3-0","n":0.333}}},{"i":19,"$":{"0":{"v":"Java gateway process exited before sending the driver its port number","n":0.302},"1":{"v":"\nAdd following env variable:\n```bash\nexport PYSPARK_SUBMIT_ARGS=\"--master local[2] pyspark-shell\"\n```\n\nReference:\nhttps://stackoverflow.com/questions/31841509/pyspark-exception-java-gateway-process-exited-before-sending-the-driver-its-po/36367669#36367669","n":0.378}}},{"i":20,"$":{"0":{"v":"Wsl2","n":1}}},{"i":21,"$":{"0":{"v":"Forward Wsl Port to Host","n":0.447},"1":{"v":"If you start a service in WSL that expose some port (like you are running a website with docker in WSL), it can only be accessed from your own machine with the WSL ip address. What if you want to allow other people access it from another machine? You can run the following powershell scripts to forward ports out.\n\n```powershell\n\nIf (-NOT ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] \"Administrator\")) {   \n  $arguments = \"& '\" + $myinvocation.mycommand.definition + \"'\"\n  Start-Process powershell -Verb runAs -ArgumentList $arguments\n  Break\n}\n\n$remoteport = bash.exe -c \"ifconfig eth0 | grep 'inet '\"\n$found = $remoteport -match '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}';\n\nif( $found ){\n  $remoteport = $matches[0];\n} else{\n  echo \"The Script Exited, the ip address of WSL 2 cannot be found\";\n  exit;\n}\n\n#[Ports]\n\n#All the ports you want to forward separated by coma\n$ports=@(10000,3000,5000,8088,5432,5433,8000,8443,8083,9002,9092,8081,5601,3030,3080);\n\n\n#[Static ip]\n#You can change the addr to your ip config to listen to a specific address\n$addr='0.0.0.0';\n$ports_a = $ports -join \",\";\n\n\n#Remove Firewall Exception Rules\niex \"Remove-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock' \";\n\n#adding Exception Rules for inbound and outbound Rules\niex \"New-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock' -Direction Outbound -LocalPort $ports_a -Action Allow -Protocol TCP\";\niex \"New-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock' -Direction Inbound -LocalPort $ports_a -Action Allow -Protocol TCP\";\n\nfor( $i = 0; $i -lt $ports.length; $i++ ){\n  $port = $ports[$i];\n  iex \"netsh interface portproxy delete v4tov4 listenport=$port listenaddress=$addr\";\n  iex \"netsh interface portproxy add v4tov4 listenport=$port listenaddress=$addr connectport=$port connectaddress=$remoteport\";\n}\n\niex \"netsh interface portproxy show v4tov4\";\n```\n\n⚠️ This need to be done every time WSL is restarted.\n\n[forward_wsl.ps1](/assets/scripts/forward_wsl.ps1)","n":0.066}}},{"i":22,"$":{"0":{"v":"Allow Wsl2 Access Network","n":0.5},"1":{"v":"If your WSL2 can't access internet network, you can use following powershell scripts to resolve this issue:\n\n```powershell\n#Requires -RunAsAdministrator\n\nSet-NetFirewallProfile -Profile Private -DisabledInterfaceAliases \"vEthernet (WSL)\"\nSet-NetFirewallProfile -Profile Public -DisabledInterfaceAliases \"vEthernet (WSL)\"\nNew-NetFirewallRule -DisplayName \"WSL\" -Direction Inbound  -InterfaceAlias \"vEthernet (WSL)\"  -Action Allow\n```\n\n[allow wsl2 access network.ps1](/assets/scripts/allow%20wsl2%20access%20network.ps1)","n":0.158}}},{"i":23,"$":{"0":{"v":"Linux","n":1}}},{"i":24,"$":{"0":{"v":"Ungrade Ubuntu 18.04(Bionic Beaver) to 20.04 (Focal Fossa)  on linux deploy","n":0.302},"1":{"v":"## update source.list\n\nUpdate /etc/apt/sources.list, add following lines:\n\n```bash\ndeb http://ports.ubuntu.com/ bionic-updates main restricted multiverse universe\ndeb-src http://ports.ubuntu.com/ bionic-updates main restricted multiverse universe\n```\n\n## run update\n\n### install ubuntu-release-upgrader-core\n\n```bash\nsudo apt update & apt upgrade & apt install ubuntu-release-upgrader-core\n```\n\n### update with do-release-upgrade\n\n```bash\nsudo do-release-upgrade\n```","n":0.167}}},{"i":25,"$":{"0":{"v":"Show All User Group","n":0.5},"1":{"v":"Option 1:\n```bash\ncat /etc/group\n```\n\nOption 2:\n```bash\ngetent group\n```","n":0.447}}},{"i":26,"$":{"0":{"v":"Mount Webdav","n":0.707},"1":{"v":"Run the following command to install davfs2\n\n```bash\nsudo apt install davfs2\n```\n\nRun the following command to edit webdav secret and add the following lines:\nUse the following commands to change file permissions:\n\n```bash\nsudo chmod 600 /etc/davfs2/secrets\nsudo chown root:root /etc/davfs2/secrets\n```\n\nMount WebDAV\n\n```bash\nsudo mkdir /mnt/alist-drive\nsudo mount -t davfs http://192.168.31.198:5244/dav /mnt/alist-drive\n```\n\nreferences:\n<https://wiki.archlinux.org/title/Davfs2>\n<https://manpages.ubuntu.com/manpages/xenial/man8/mount.davfs.8.html>\n","n":0.152}}},{"i":27,"$":{"0":{"v":"Mount Smb in WSL","n":0.5},"1":{"v":"```bash\nsudo mount -t drvfs '\\\\192.168.31.27\\homes' /mnt/nas\n```\n\nReference:\nhttps://learn.microsoft.com/zh-cn/archive/blogs/wsl/file-system-improvements-to-the-windows-subsystem-for-linux\n","n":0.408}}},{"i":28,"$":{"0":{"v":"Link Folder","n":0.707},"1":{"v":"When I using WSL as my dev environment, I found I need to access some windows folders frequently. However, the windows folder paths in WSL are very long. For example, I kept the cloned public repository in E:\\codes, the path in WSL will be /mnt/e/codes. I want to access it from my linux home directory in a fast way. The following command can create a symbolic link in ~/codes.\n\n```bash\nln -s /mnt/e/codes codes\n```","n":0.118}}},{"i":29,"$":{"0":{"v":"Create Init.d Script","n":0.577},"1":{"v":"## Sample service script for debian/ubuntu\n\nLook at [LSB init scripts](http://wiki.debian.org/LSBInitScripts) for more information.\n\n## Usage\n\nCopy [service.sh](/assets/scripts/service.sh) to `/etc/init.d`:\n\n```sh\n# replace \"$YOUR_SERVICE_NAME\" with your service's name\ncp \"service.sh\" \"/etc/init.d/$YOUR_SERVICE_NAME\"\nchmod +x /etc/init.d/$YOUR_SERVICE_NAME\nchown root /etc/init.d/$YOUR_SERVICE_NAME\nchgrp root /etc/init.d/$YOUR_SERVICE_NAME\n```\n\nEdit the script and replace following tokens:\n\n* `<NAME>` = `$YOUR_SERVICE_NAME`\n* `<DESCRIPTION>` = Describe your service here (be concise)\n* Feel free to modify the LSB header, I've made default choices you may not agree with\n* `<COMMAND>` = Command to start your server (for example `/home/myuser/.dropbox-dist/dropboxd`)\n* `<USER>` = Login of the system user the script should be run as (for example `myuser`)\n\n## Test the service\n\n```sh\nservice $YOUR_SERVICE_NAME start\nservice $YOUR_SERVICE_NAME stop\n```\n\n## Run at boot-time\n\n```sh\nupdate-rc.d $YOUR_SERVICE_NAME defaults\n```\n\n## Uninstall\n\nThe service can uninstall itself with `service $NAME uninstall`. Yes, that's very easy, therefore a bit dangerous. But as it's an auto-generated script, you can bring it back very easily. I use it for tests and often install/uninstall, that's why I've put that here.\n\nDon't want it? Remove lines 56-58 of the service's script.\n\n## Logs?\n\nYour service will log its output to `/var/log/$NAME.log`. Don't forget to setup a logrotate :)\n\n## Problems\n\n```unable to execute /etc/init.d/$YOUR_SERVICE_NAME: No such file or directory.```\n\nMaybe it has been modified by a Windows's editor and the line endings could be not corrected. \nThis can be verified with the command ```cat -v service.sh``` and verifying that there are some strange characters as ``^M``.\n\nTo fix that:\n\n```sed -i 's/\\r//g' service.sh```\n\n\n```Failed to start xxx.service: Unit xxx.service not found.```\n\nto fix that:\n```bash\nsudo systemctl enable xxx\n```\n\n## auto create new service\n\nUsing [new_service.sh](/assets/scripts/new_service.sh) to auto create new service.\n\n## reference\n\n<https://gist.github.com/miromannino/a17f3e6f3fdcb4d94a1f>\n","n":0.064}}},{"i":30,"$":{"0":{"v":"Change Default Shell","n":0.577},"1":{"v":"After installed ubuntu with linux deploy on android, the default shell is set to sh. We can change the default shell to bash with following command:\n\n```bash\nchsh -s /bin/bash\n```\n\nLog out and then log in, the default shell is changed.\n","n":0.162}}},{"i":31,"$":{"0":{"v":"Git","n":1}}},{"i":32,"$":{"0":{"v":"Git Stage All Then Commit And Push","n":0.378},"1":{"v":"Use following command\n\n```bash\ngit add -A && git commit -m \"Your Message\" && git push\n```\n\nAlso can add alas as following:\n\n```bash\ngit config --global alias.coa \"!git add -A && git commit -m\"\n```\n\nThen run\n\n```bash\ngit coa \"Your Message\" && git push\n```\n\nReference:\n\n<https://stackoverflow.com/questions/2419249/how-can-i-stage-and-commit-all-files-including-newly-added-files-using-a-singl>\n","n":0.167}}},{"i":33,"$":{"0":{"v":"Windows Command Set Proxy","n":0.5},"1":{"v":"Works in both command prompt and powershell\nShow proxy:\n```powershell\nnetsh winhttp show proxy\n```\nset proxy\n```powershell\nnetsh winhttp set proxy \"http://192.168.31.198:7890\"\n```\n\n\nsudo mount -t drvfs '\\\\server\\share' /mnt/share","n":0.218}}},{"i":34,"$":{"0":{"v":"Java","n":1}}},{"i":35,"$":{"0":{"v":"Spring","n":1}}},{"i":36,"$":{"0":{"v":"Deserialize Enum Ignore Case in Controller","n":0.408},"1":{"v":"The enum parameter in spring boot controller is case sensitive by default.\nTo make the enum parameter can be deserialized from case insensitive string, we can add the following web mvc configuration:\n\n```java\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n@Override\n    public void addFormatters(FormatterRegistry registry){\n        ApplicationConversionService.configure(registry);\n    }\n}\n```\n","n":0.154}}},{"i":37,"$":{"0":{"v":"GitHub","n":1}}},{"i":38,"$":{"0":{"v":"Create Custom Domains for Multiple Github Pages Repos","n":0.354},"1":{"v":"Nothing special, just create two different CNAME records, and both points to [username].github.io.\n\nFor example, the first github pages project is [username].github.com/project-a, and it's published at [username].github.io.(The first github pages site will be published at root). You can create a custom domain CNAME record like project-a and point to **[username].github.io**. Then you can create the second github pages project at [username].github.com/project-b, and it will be published to [username].github.io/project-b. The trick here is that you only need to create another CNAME record like project-b and still point to **[username].github.io**. Now you have two github pages sites **project-a.[you-domain].com** and **project-b.[your-domain].com**.\n","n":0.102}}}]}
